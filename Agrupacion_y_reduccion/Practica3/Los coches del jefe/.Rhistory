ggplot(tterreno, aes(x = as.factor(plazas), y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = T, notchwidth = 0.8,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2)
ggplot(tterreno, aes(x = as.factor(plazas), y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 0.8,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2)
ggplot(tterreno, aes(x = as.factor(plazas), y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 0.8,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y=mean, geom="point", shape=20, size=14, color="green", fill="green")
ggplot(tterreno, aes(x = as.factor(plazas), y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 0.8,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y=mean, geom="point", shape=20, size=1, color="green", fill="green")
ggplot(tterreno, aes(x = as.factor(plazas), y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 0.8,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y=mean, geom="point", shape=20, size=2, color="green", fill="green")
ggplot(tterreno, aes(x = as.factor(plazas), y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 2,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y=mean, geom="point", shape=20, size=2, color="green", fill="green")
ggplot(tterreno, aes(x = as.factor(plazas), y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 2,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y=mean, geom="point", shape=20, size=3, color="green", fill="green")
ggplot(tterreno, aes(x = as.factor(plazas), y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 2,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y = mean, geom = "point", shape = 20, size = 3, color = "green", fill = "green") +
xlab('Nº de plazas') + ylab('Peso (Kg)')
corrplot(round(cor(tterreno_resumido, method = 'pearson'), 2), method = 'square', type = 'lower')
ggplot(tterreno, aes(x = peso, y = cons90)) + geom_point(color = as.factor(tterreno$plazas)) + xlab('Peso (Kg)') + ylab('Consumo a 90 Km/h (Litros)')
knitr::opts_chunk$set(echo = TRUE)
ggplot(tterreno, aes(x = peso, y = cons90, color = as.factor(tterreno$plazas))) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 90 Km/h (Litros)')
library(haven)
library(factoextra)
library(cluster)
library(dplyr)
library(scales)
library(corrplot)
library(ggplot2)
tterreno <- read_sav("../data/tterreno.sav")
View(tterreno)
tterreno <- as.data.frame(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.integer(tterreno$cilindro)
tterreno$plazas <- as.integer(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
tterreno <- na.omit(tterreno)
tterreno <- select(tterreno, -acel2)
ggplot(tterreno, aes(x = peso, y = cons90, color = as.factor(tterreno$plazas))) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 90 Km/h (Litros)')
knitr::opts_chunk$set(echo = TRUE)
tterreno <- read_sav("../data/tterreno.sav")
library(haven)
library(factoextra)
library(cluster)
library(dplyr)
library(scales)
library(corrplot)
library(ggplot2)
tterreno <- read_sav("../data/tterreno.sav")
View(tterreno)
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(factoextra)
library(cluster)
library(dplyr)
library(scales)
library(corrplot)
library(ggplot2)
tterreno <- read_sav("../data/tterreno.sav")
View(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.integer(tterreno$cilindro)
tterreno$plazas <- as.integer(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
tterreno <- as.data.frame(tterreno)
nas <- apply(tterreno, 1, is.na)
num_nas <- apply(nas, 1, sum)
num_nas/nrow(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.factor(tterreno$cilindro)
tterreno$plazas <- as.factor(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
nas <- apply(tterreno, 1, is.na)
num_nas <- apply(nas, 1, sum)
num_nas/nrow(tterreno)
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
summary(tterreno)
tterreno <- na.omit(tterreno)
tterreno <- select(tterreno, -acel2)
ggplot(tterreno) + geom_bar(aes(x = cilindro)) + xlab('Nº de cilindros') + ylab('Nº de vehículos')
ggplot(tterreno, aes(x = velocida, y = acelerac)) + geom_point() + xlab('velocidad') + ylab('aceleración')
ggplot(tterreno, aes(x = peso, y = cons90, color = tterreno$plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 90 Km/h (Litros)') + legend(title = 'Nº de plazas')
ggplot(tterreno, aes(x = peso, y = cons90, color = tterreno$plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 90 Km/h (Litros)') + legend(tterreno$plazas, title = 'Nº de plazas')
ggplot(tterreno, aes(x = peso, y = cons90, color = tterreno$plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 90 Km/h (Litros)')
ggplot(tterreno, aes(x = peso, y = cons90, color = plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 90 Km/h (Litros)')
ggplot(tterreno) + geom_bar(aes(x = plazas)) + xlab('Nº de plazas') + ylab('Nº de vehículos')
tterreno_resumido <- select(tterreno, -marca, -modelo)
shapiro.test(tterreno_resumido$cons90), shapiro.test(tterreno_resumido$cons120)
shapiro.test(tterreno_resumido$cons90); shapiro.test(tterreno_resumido$cons120)
t.test(tterreno_resumido$cons90, tterreno_resumido$cons120)
tipificar <- function(datos) {
for (columna in names(datos)) {
if (class(datos[,columna]) == 'integer' | class(datos[,columna]) == 'numeric') {
datos[,columna] <- scale(datos[,columna])
}
}
return(datos)
}
tterreno <- tipificar(tterreno)
View(tterreno)
t.test(tterreno$cons90, tterreno$cons120)
tterreno <- read_sav("../data/tterreno.sav")
View(tterreno)
tterreno <- as.data.frame(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.factor(tterreno$cilindro)
tterreno$plazas <- as.factor(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
tterreno <- na.omit(tterreno)
tterreno <- select(tterreno, -acel2)
tterreno <- select(tterreno, -marca, -modelo)
tterreno <- read_sav("../data/tterreno.sav")
View(tterreno)
tterreno <- as.data.frame(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.factor(tterreno$cilindro)
tterreno$plazas <- as.factor(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
nas <- apply(tterreno, 1, is.na)
num_nas <- apply(nas, 1, sum)
num_nas/nrow(tterreno)
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
summary(tterreno)
tterreno %>% group_by(marca) %>% summarise(Mean90 = mean(cons90), Mean120 = mean(cons120), MeanUrb = mean(consurb))
tterreno %>% group_by(marca) %>% summarise(Mean90 = mean(cons90, na.rm = T),
Mean120 = mean(cons120, na.rm = T),
MeanUrb = mean(consurb, na.rm = T))
View(tterreno)
tterreno <- read_sav("../data/tterreno.sav")
View(tterreno)
tterreno <- as.data.frame(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.factor(tterreno$cilindro)
tterreno$plazas <- as.factor(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
apply(tterreno, 2, function(x) {sum(is.na(x))/nrow(tterreno)})
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
View(tterreno)
tterreno$cons90 <- apply(tterreno, 2, function(x) {ifelse(tterreno$marca[x] == '11' & is.na(tterreno$cons90[x]),
tterreno$cons90[x] = 8.4, tterreno$cons90[x])})
tterreno$cons90 <- apply(tterreno, 2, function(x) {ifelse(tterreno$marca[x] == '11' & is.na(tterreno$cons90[x]),
8.4, tterreno$cons90[x])})
View(tterreno)
tterreno <- read_sav("../data/tterreno.sav")
View(tterreno)
tterreno <- as.data.frame(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.factor(tterreno$cilindro)
tterreno$plazas <- as.factor(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
View(tterreno)
tterreno$cons90Nuevo <- apply(tterreno, 2, function(x) {ifelse(tterreno$marca[x] == '11' & is.na(tterreno$cons90[x]),
8.4, tterreno$cons90[x])})
View(tterreno)
tterreno$cons90Nuevo <- apply(tterreno, 2, function(x) {ifelse(tterreno$marca[x] == '11' & is.na(tterreno$cons90[x]),
8.4, tterreno$cons90)})
tterreno$cons90Nuevo <- apply(tterreno, 2, function(x) {ifelse(tterreno$marca[x] == '11' & is.na(tterreno$cons90[x]),
8.4, tterreno$cons90[x])})
tterreno <- read_sav("../data/tterreno.sav")
tterreno$cons90Nuevo <- apply(tterreno, 2, function(x) {ifelse(tterreno$marca[x] == '11' & is.na(tterreno$cons90[x]),
8.4, tterreno$cons90[x])})
tterreno <- read_sav("../data/tterreno.sav")
tterreno <- as.data.frame(tterreno)
tterreno$cons90Nuevo <- apply(tterreno$cons90, 2, function(x) {ifelse(tterreno$marca[x] == '11' & is.na(tterreno$cons90[x]),
8.4, tterreno$cons90[x])})
View(tterreno)
for (i in seq(1:nrow(tterreno))) {
if (tterreno$marca[i] == '11' & is.na(tterreno$cons90[i])) {
tterreno$cons90[i] = 8.4
}
else if (tterreno$marca[i] == '13' & is.na(tterreno$cons90[i])) {
tterreno$cons90[i] = 8.17
}
}
summary(tterreno)
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
summary(tterreno)
tterreno %>% group_by(marca) %>% summarise(Mean90 = mean(cons90, na.rm = T),
Mean120 = mean(cons120, na.rm = T),
MeanUrb = mean(consurb, na.rm = T),
NAS90 = sum(is.na(cons90)),
NAS120 = sum(is.na(cons120)),
NASUrb = sum(is.na(consurb)))
for (i in seq(1:nrow(tterreno))) {
if (tterreno$marca[i] == '5' & is.na(tterreno$cons120[i])) {
tterreno$cons90[i] = 13.744
}
else if (tterreno$marca[i] == '7' & is.na(tterreno$cons120[i])) {
tterreno$cons90[i] = 12
}
else if (tterreno$marca[i] == '11' & is.na(tterreno$cons120[i])) {
tterreno$cons90[i] = 12.478571
}
else if (tterreno$marca[i] == '13' & is.na(tterreno$cons120[i])) {
tterreno$cons90[i] = 12.6
}
}
summary(tterreno)
tterreno <- read_sav("../data/tterreno.sav")
View(tterreno)
tterreno <- as.data.frame(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.factor(tterreno$cilindro)
tterreno$plazas <- as.factor(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
apply(tterreno, 2, function(x) {sum(is.na(x))/nrow(tterreno)})
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
tterreno <- select(tterreno, -acel2)
summary(tterreno)
tterreno %>% group_by(marca) %>% summarise(Mean90 = mean(cons90, na.rm = T),
Mean120 = mean(cons120, na.rm = T),
MeanUrb = mean(consurb, na.rm = T),
NAS90 = sum(is.na(cons90)),
NAS120 = sum(is.na(cons120)),
NASUrb = sum(is.na(consurb)))
# consumo a 90
for (i in seq(1:nrow(tterreno))) {
if (tterreno$marca[i] == '11' & is.na(tterreno$cons90[i])) {
tterreno$cons90[i] = 8.4
}
else if (tterreno$marca[i] == '13' & is.na(tterreno$cons90[i])) {
tterreno$cons90[i] = 8.17
}
}
# consumo a 120
for (i in seq(1:nrow(tterreno))) {
if (tterreno$marca[i] == '5' & is.na(tterreno$cons120[i])) {
tterreno$cons120[i] = 13.744
}
else if (tterreno$marca[i] == '7' & is.na(tterreno$cons120[i])) {
tterreno$cons120[i] = 12
}
else if (tterreno$marca[i] == '11' & is.na(tterreno$cons120[i])) {
tterreno$cons120[i] = 12.478571
}
else if (tterreno$marca[i] == '13' & is.na(tterreno$cons120[i])) {
tterreno$cons120[i] = 12.6
}
}
summary(tterreno)
View(tterreno)
for (i in seq(1:nrow(tterreno))) {
if (tterreno$marca[i] == '5' & is.na(tterreno$consurb[i])) {
tterreno$consurb[i] = 13.744
}
else if (tterreno$marca[i] == '7' & is.na(tterreno$consurb[i])) {
tterreno$consurb[i] = 12
}
else if (tterreno$marca[i] == '11' & is.na(tterreno$consurb[i])) {
tterreno$consurb[i] = 12.478571
}
else if (tterreno$marca[i] == '16' & is.na(tterreno$consurb[i])) {
tterreno$consurb[i] = 12.22
}
}
summary(tterreno)
tterreno$cons120[1:3] <- tidyr::replace_na(tterreno$cons120[1:3], 12/8.333)
tterreno$cons120[1:3] <- tidyr::replace_na(tterreno$cons120[1:3], (12+8.333)/2)
tterreno <- read_sav("../data/tterreno.sav")
tterreno <- as.data.frame(tterreno)
tterreno$marca <- as.factor(tterreno$marca)
tterreno$cilindro <- as.factor(tterreno$cilindro)
tterreno$plazas <- as.factor(tterreno$plazas)
tterreno$acel2 <- as.factor(tterreno$acel2)
apply(tterreno, 2, function(x) {sum(is.na(x))/nrow(tterreno)})
# calculo la desviacion estandar de la variable 'acelerac'
desviacion_acelerac <- sd(tterreno$acelerac, na.rm = TRUE)
# recorro el dataframe
for (i in seq(1:nrow(tterreno))) {
# compruebo si es un Na
if (is.na(tterreno$acelerac[i])) {
aleatorio = runif(1, min = 0, max = 1) # genero un aleatorio entre 0 y 1
# compruebo el valor de la variable 'acel2'
if (tterreno$acel2 == '1') {
tterreno$acelerac[i] <- 10 - desviacion_acelerac*aleatorio
}
else {
tterreno$acelerac[i] <- 10 + desviacion_acelerac*aleatorio
}
}
}
tterreno <- select(tterreno, -acel2)
summary(tterreno)
tterreno %>% group_by(marca) %>% summarise(Mean90 = mean(cons90, na.rm = T),
Mean120 = mean(cons120, na.rm = T),
MeanUrb = mean(consurb, na.rm = T),
NAS90 = sum(is.na(cons90)),
NAS120 = sum(is.na(cons120)),
NASUrb = sum(is.na(consurb)))
View(tterreno)
# la imputacion se realiza con un for, las marcas 1 y 17 se imputan a mano ciertos consumos en base
# al conocimiento del negocio, puesto que se carece de la media
tterreno$cons120[1:3] <- tidyr::replace_na(tterreno$cons120[1:3], (12 + 8.333)/2)
# para la marca 17 se imputan los consumos acorde al modelo más parecido posible, este es el Ssangyong Family RV, la
# observacion 92, presenta mismo nº de cilindros, mismos cc, potencia, rpm y plazas
tterreno$cons90[122:125] <- tidyr::replace_na(tterreno$cons90[122:125], tterreno$cons90[92])
tterreno$cons120[122:125] <- tidyr::replace_na(tterreno$cons120[122:125], tterreno$cons120[92])
# consumo a 90
for (i in seq(1:nrow(tterreno))) {
if (tterreno$marca[i] == '11' & is.na(tterreno$cons90[i])) {
tterreno$cons90[i] = 8.4
}
else if (tterreno$marca[i] == '13' & is.na(tterreno$cons90[i])) {
tterreno$cons90[i] = 8.17
}
}
# consumo a 120
for (i in seq(1:nrow(tterreno))) {
if (tterreno$marca[i] == '5' & is.na(tterreno$cons120[i])) {
tterreno$cons120[i] = 16.2
}
else if (tterreno$marca[i] == '11' & is.na(tterreno$cons120[i])) {
tterreno$cons120[i] = 12.185714
}
else if (tterreno$marca[i] == '13' & is.na(tterreno$cons120[i])) {
tterreno$cons120[i] = 12.6
}
}
# consumo urbano
for (i in seq(1:nrow(tterreno))) {
if (tterreno$marca[i] == '5' & is.na(tterreno$consurb[i])) {
tterreno$consurb[i] = 13.744
}
else if (tterreno$marca[i] == '7' & is.na(tterreno$consurb[i])) {
tterreno$consurb[i] = 12
}
else if (tterreno$marca[i] == '11' & is.na(tterreno$consurb[i])) {
tterreno$consurb[i] = 12.478571
}
else if (tterreno$marca[i] == '16' & is.na(tterreno$consurb[i])) {
tterreno$consurb[i] = 12.22
}
}
View(tterreno)
summary(tterreno)
View(tterreno)
tterreno <- na.omit(tterreno)
6/125
ggplot(tterreno) + geom_bar(aes(x = cilindro)) + xlab('Nº de cilindros') + ylab('Nº de vehículos')
ggplot(tterreno) + geom_bar(aes(x = plazas)) + xlab('Nº de plazas') + ylab('Nº de vehículos')
tterreno <- select(tterreno, -marca, -modelo)
corrplot(round(cor(tterreno, method = 'pearson'), 2), method = 'square', type = 'lower')
View(tterreno)
corrplot(round(cor(tterreno[,c(3:6, 8:12)], method = 'pearson'), 2), method = 'square', type = 'lower')
ggplot(tterreno, aes(x = peso, y = cons120, color = plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 120 Km/h (Litros)')
ggplot(tterreno, aes(x = peso, y = consurb, color = plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo urbano (Litros)')
ggplot(tterreno, aes(x = plazas, y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 2,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y = mean, geom = "point", shape = 20, size = 3, color = "green", fill = "green") +
xlab('Nº de plazas') + ylab('Peso (Kg)') + title('Diagrama de cajas Peso - Nº plazas')
ggplot(tterreno, aes(x = plazas, y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 2,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y = mean, geom = "point", shape = 20, size = 3, color = "green", fill = "green") +
xlab('Nº de plazas') + ylab('Peso (Kg)')
ggplot(tterreno, aes(x = plazas, y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 2,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y = mean, geom = "point", shape = 20, size = 3, color = "green", fill = "green") +
xlab('Nº de plazas') + ylab('Peso (Kg)') + ggtitle('Diagrama de cajas Peso - Nº plazas')
125*0,368
125*0.368
125*(1-0.368)
6/125
ggplot(tterreno, aes(x = peso, y = cons90, color = plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 90 Km/h (Litros)')
ggplot(tterreno, aes(x = peso, y = cons120, color = plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo a 120 Km/h (Litros)')
ggplot(tterreno, aes(x = peso, y = consurb, color = plazas)) + geom_point() + xlab('Peso (Kg)') + ylab('Consumo urbano (Litros)')
ggplot(tterreno, aes(x = plazas, y = peso)) + geom_boxplot(color = 'red', fill = 'red', alpha = 0.2,
notch = F, notchwidth = 2,
outlier.colour = 'blue', outlier.fill = 'blue', outlier.size = 2) +
stat_summary(fun.y = mean, geom = "point", shape = 20, size = 3, color = "green", fill = "green") +
xlab('Nº de plazas') + ylab('Peso (Kg)')
corrplot(round(cor(tterreno[,c(3:6, 8:12)], method = 'pearson'), 2), method = 'square', type = 'lower')
corrplot(round(cor(tterreno[,c(3:6, 8:12)], method = 'pearson'), 2), method = 'number', type = 'lower')
corrplot(round(cor(tterreno[,c(3:6, 8:12)], method = 'pearson'), 2), method = 'number', type = 'lower')
