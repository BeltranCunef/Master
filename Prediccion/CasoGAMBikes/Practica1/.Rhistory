library(car)
library(corrplot)
set.seed(123)
bikes <- read.csv("day.csv")
skim(bikes)
bikes <- select(bikes, -instant)
corrplot(round(cor(bikes %>% select_at(vars(-dteday))), 1), method = "number", type = "upper",
tl.cex = 0.85, tl.srt = 45)
DOFseason <- smooth.spline(bikes$cnt, bikes$season, cv = TRUE) #DOF of season
DOFholiday <- smooth.spline(bikes$cnt, bikes$holiday, cv = TRUE) #DOF of holiday
DOFweekday <- smooth.spline(bikes$cnt, bikes$weekday, cv = TRUE) #DOF of weekday
DOFworkingday <- smooth.spline(bikes$cnt, bikes$workingday, cv = TRUE) #DOF of workingday
DOFweathersit <- smooth.spline(bikes$cnt, bikes$weathersit, cv = TRUE) #DOF of weathersit
DOFtemp <- smooth.spline(bikes$cnt, bikes$temp, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$cnt, bikes$atemp, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$cnt, bikes$hum, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$cnt, bikes$windspeed, cv = TRUE) #DOF of windspeed
DOFinGeneral <- c(DOFseason$df, DOFholiday$df, DOFweekday$df, DOFworkingday$df, DOFweathersit$df,
DOFtemp$df, DOFatemp$df, DOFhum$df, DOFwindspeed$df)
# DOFinGeneral is a vector which contains all DOF
DOFinGeneral
modeloGam1 <- gam(cnt ~ s(atemp, df = DOFinGeneral[1]) + s(hum, df = DOFinGeneral[3]) +
s(temp, df = DOFinGeneral[5]) + s(windspeed, df = DOFinGeneral[8]),
data = bikes)
modeloGam1 <- gam(cnt ~ s(atemp, df = DOFinGeneral[1]) + s(hum, df = DOFinGeneral[3]) +
s(temp, df = DOFinGeneral[5]) + s(windspeed, df = DOFinGeneral[8]),
data = bikes)
gam(modeloGam1, se = TRUE, col = 'green')
View(bikes)
modeloGam1 <- gam(bikes$cnt ~ s(atemp, df = DOFinGeneral[1]) + s(hum, df = DOFinGeneral[3]) +
s(temp, df = DOFinGeneral[5]) + s(windspeed, df = DOFinGeneral[8]),
data = bikes)
gam(modeloGam1, se = TRUE, col = 'green')
modeloGam1 <- gam(bikes$cnt ~ s(bikes$atemp, df = DOFinGeneral[1]) + s(bikes$hum, df = DOFinGeneral[3]) +
s(bikes$temp, df = DOFinGeneral[5]) + s(bikes$windspeed, df = DOFinGeneral[8]),
data = bikes)
gam(modeloGam1, se = TRUE, col = 'green')
modeloGam1 <- gam(bikes$cnt ~ s(bikes$atemp, df = DOFinGeneral[1]) + s(bikes$hum, df = DOFinGeneral[3]) +
s(bikes$temp, df = DOFinGeneral[5]) + s(bikes$windspeed, df = DOFinGeneral[8]),
data = bikes)
plot(modeloGam1, se = TRUE, col = 'green')
gam(modeloGam1, se = TRUE, col = 'green')
summary(modeloGam1)
# En este modelo incluyo las varibales cuantitativas y las categoricas
modeloGam2 <- gam(bikes$cnt ~ s(bikes$atemp, df = DOFinGeneral[1]) + s(bikes$hum, df = DOFinGeneral[3]) +
s(bikes$temp, df = DOFinGeneral[5]) + s(bikes$windspeed, df = DOFinGeneral[8]) +
bikes$season + bikes$yr + bikes$mnth + bikes$holiday + bikes$weekday + bikes$workingday +
bikes$weathersit, data = bikes)
gam(modeloGam1, se = TRUE, col = 'green')
gam(modeloGam1)
summary(modeloGam2)
anova(modeloGam1, modeloGam2, test = "F")
plot.gam(modeloGam1, se = TRUE, col = "green")
plot(modeloGam1, se = TRUE, col = "green")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(ISLR)
library(boot)
library(splines)
library(ggplot2)
library(gam)
library(skimr)
library(car)
library(corrplot)
set.seed(123)
bikes <- read.csv("day.csv")
bikes <- select(bikes, -instant)
DOFseason <- smooth.spline(bikes$cnt, bikes$season, cv = TRUE) #DOF of season
DOFholiday <- smooth.spline(bikes$cnt, bikes$holiday, cv = TRUE) #DOF of holiday
DOFweekday <- smooth.spline(bikes$cnt, bikes$weekday, cv = TRUE) #DOF of weekday
DOFworkingday <- smooth.spline(bikes$cnt, bikes$workingday, cv = TRUE) #DOF of workingday
DOFweathersit <- smooth.spline(bikes$cnt, bikes$weathersit, cv = TRUE) #DOF of weathersit
DOFtemp <- smooth.spline(bikes$cnt, bikes$temp, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$cnt, bikes$atemp, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$cnt, bikes$hum, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$cnt, bikes$windspeed, cv = TRUE) #DOF of windspeed
DOFinGeneral <- c(DOFseason$df, DOFholiday$df, DOFweekday$df, DOFworkingday$df, DOFweathersit$df,
DOFtemp$df, DOFatemp$df, DOFhum$df, DOFwindspeed$df)
# DOFinGeneral is a vector which contains all DOF
DOFinGeneral
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(bikes$atemp, df = DOFinGeneral[1]) + s(bikes$hum, df = DOFinGeneral[3]) +
s(bikes$temp, df = DOFinGeneral[5]) + s(bikes$windspeed, df = DOFinGeneral[8]),
data = bikes)
gam(modeloGam1)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(bikes$cnt ~ s(bikes$atemp, df = DOFinGeneral[1]) + s(bikes$hum, df = DOFinGeneral[3]) +
s(bikes$temp, df = DOFinGeneral[5]) + s(bikes$windspeed, df = DOFinGeneral[8]),
data = bikes)
gam(modeloGam1)
plot(modeloGam1, se = TRUE, col = "green")
modeloGam1 <- gam(bikes$cnt ~ s(bikes$atemp, df = 2) + s(bikes$hum, df = 2) +
s(bikes$temp, df = 2) + s(bikes$windspeed, df = 2),
data = bikes)
plot(modeloGam1, se = TRUE, col = "green")
gam(modeloGam1)
modeloGam1 <- gam(bikes$cnt ~ s(bikes$atemp, df = DOFinGeneral[1]) + s(bikes$hum, df = DOFinGeneral[3]) +
s(bikes$temp, df = DOFinGeneral[5]) + s(bikes$windspeed, df = DOFinGeneral[8]),
data = bikes)
gam(modeloGam1)
modeloGam1 <- gam(bikes$cnt ~ s(bikes$atemp, df = DOFinGeneral[1]) + s(bikes$hum, df = DOFinGeneral[3]) +
s(bikes$temp, df = DOFinGeneral[5]) + s(bikes$windspeed, df = DOFinGeneral[8]), data = bikes)
plot(modeloGam1, se = TRUE)
modeloGam1 <- gam(cnt ~ s(atemp, df = 2) + s(hum, df = 2) +
s(temp, df = 2) + s(windspeed, df = 1), data = bikes)
DOFinGeneral
View(DOFatemp)
bikes <- read.csv("day.csv")
bikes <- select(bikes, -instant)
DOFtemp <- smooth.spline(bikes$temp, bikes$cnt, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$atemp, bikes$cnt, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$hum, bikes$cnt, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$windspeed, bikes$cnt, cv = TRUE) #DOF of windspeed
DOFtemp, DOFatemp, DOFhum, DOFwindspeed
DOFtemp <- smooth.spline(bikes$temp, bikes$cnt, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$atemp, bikes$cnt, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$hum, bikes$cnt, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$windspeed, bikes$cnt, cv = TRUE) #DOF of windspeed
DOFtemp; DOFatemp; DOFhum; DOFwindspeed
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(bikes$windspeed, df = 6.007664), data = bikes)
gam(modeloGam1)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
gam(modeloGam1)
modeloGam1.lo <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1.lo <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
gam(modeloGam1)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam.lo(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
gam(modeloGam1)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(bikes$cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
gam(modeloGam1)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(bikes$cnt ~ s(bikes$atemp, df = 8.805497) + s(bikes$hum, df = 8.805497) +
s(bikes$temp, df = 9.103704) + s(bikes$windspeed, df = 6.007664), data = bikes)
gam(modeloGam1)
plot(modeloGam1, se = TRUE, col = "red")
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
gam(modeloGam1)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
gam(modeloGam1)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes)
plot(modeloGam1, se = TRUE, col = "red")
summary(modeloGam1)
# En este modelo incluyo las varibales cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes)
plot(modeloGam2, se = TRUE, col = "blue")
summary(modeloGam2)
anova(modeloGam1, modeloGam2, test = "F")
bikes <- read.csv("day.csv")
bikes <- read.csv("day.csv")
bikes <- select(bikes, -instant)
corrplot(round(cor(bikes %>% select_at(vars(-dteday))), 1), method = "number", type = "upper",
tl.cex = 0.85, tl.srt = 45)
DOFtemp <- smooth.spline(bikes$temp, bikes$cnt, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$atemp, bikes$cnt, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$hum, bikes$cnt, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$windspeed, bikes$cnt, cv = TRUE) #DOF of windspeed
DOFtemp; DOFatemp; DOFhum; DOFwindspeed
ggplot(data = bikes, aes(x = cnt, y = temp)) + geom_point(color = 'gray') +
geom_smooth(method = 'loess', span = 0.2) +
geom_smooth(method = 'loess', span = 0.5, color = 'red') +
theme_bw()
ggplot(data = bikes, aes(x = cnt, y = atemp)) + geom_point(color = 'gray') +
geom_smooth(method = 'loess', span = 0.2) +
geom_smooth(method = 'loess', span = 0.5, color = 'red') +
theme_bw()
ggplot(data = bikes, aes(x = cnt, y = hum)) + geom_point(color = 'gray') +
geom_smooth(method = 'loess', span = 0.2) +
geom_smooth(method = 'loess', span = 0.5, color = 'red') +
theme_bw()
ggplot(data = bikes, aes(x = cnt, y = windspeed)) + geom_point(color = 'gray') +
geom_smooth(method = 'loess', span = 0.2) +
geom_smooth(method = 'loess', span = 0.5, color = 'red') +
theme_bw()
train <- sample(nrow(bikes), 0.7*nrow(bikes))
bikes_train <- df[train,] # muestra de entrenamiento
train <- sample(nrow(bikes), 0.7*nrow(bikes))
bikes_train <- bikes[train,] # muestra de entrenamiento
bikes_test <- bikes[-train,] # muestra de test
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes_train)
plot(modeloGam1, se = TRUE, col = "red")
summary(modeloGam1)
prediccion_modeloGam1 <- predict.Gam(modeloGam1, bikes_test)
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
error_modeloGam1 <- mean((prediccion_modeloGam1 - bikes_test$cnt)^2)
error_modeloGam1
sqrt(error_modeloGam1)
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
# En este modelo incluyo las varibales cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes)
plot(modeloGam2, se = TRUE, col = "blue")
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
error_modeloGam2 <- mean((prediccion_modeloGam2 - bikes_test$cnt)^2)
error_modeloGam2
sqrt(error_modeloGam2)
# En este modelo incluyo las varibales cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes_train)
plot(modeloGam2, se = TRUE, col = "blue")
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
error_modeloGam2 <- mean((prediccion_modeloGam2 - bikes_test$cnt)^2)
error_modeloGam2
sqrt(error_modeloGam2)
errorTotal_modeloGam1 <- mean((prediccion_modeloGam1 - bikes$cnt)^2)
errorTotal_modeloGam1
errorTotal_modeloGam1 <- mean((prediccion_modeloGam1 - bikes$cnt)^2)
sqrt(errorTotal_modeloGam1)
errorTotal_modeloGam2 <- mean((prediccion_modeloGam2 - bikes$cnt)^2)
(errorTotal_modeloGam2)
errorTotal_modeloGam2 <- mean((prediccion_modeloGam2 - bikes$cnt)^2)
sqrt(errorTotal_modeloGam2)
set.seed(123)
bikes <- read.csv("day.csv")
skim(bikes)
bikes <- select(bikes, -instant)
train <- sample(nrow(bikes), 0.7*nrow(bikes))
bikes_train <- bikes[train,] # muestra de entrenamiento
bikes_test <- bikes[-train,] # muestra de test
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes_train)
plot(modeloGam1, se = TRUE, col = "red")
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
error_modeloGam1 <- mean((prediccion_modeloGam1 - bikes_test$cnt)^2)
error_modeloGam1
sqrt(error_modeloGam1)
# En este modelo incluyo las varibales cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes_train)
plot(modeloGam2, se = TRUE, col = "blue")
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
error_modeloGam2 <- mean((prediccion_modeloGam2 - bikes_test$cnt)^2)
error_modeloGam2
sqrt(error_modeloGam2)
errorTotal_modeloGam1 <- mean((prediccion_modeloGam1 - bikes$cnt)^2)
sqrt(errorTotal_modeloGam1)
errorTotal_modeloGam2 <- mean((prediccion_modeloGam2 - bikes$cnt)^2)
sqrt(errorTotal_modeloGam2)
modeloGam1$coefficients
prediccionTotal <- predict(modeloGam2, bikes)
errorTotal <- mean((prediccionTotal - bikes$cnt)^2)
sqrt(errorTotal)
cv.glm(bikes_train, modeloGam2, K = 10)$delta[1] %>% print() %>% sqrt()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(ISLR)
library(boot)
library(splines)
library(ggplot2)
library(gam)
library(skimr)
library(car)
library(corrplot)
set.seed(123)
bikes <- read.csv("day.csv")
bikes <- select(bikes, -instant)
train <- sample(nrow(bikes), 0.7*nrow(bikes))
bikes_train <- bikes[train,] # muestra de entrenamiento
bikes_test <- bikes[-train,] # muestra de test
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes_train)
plot(modeloGam1, se = TRUE, col = "red")
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
error_modeloGam1 <- mean((prediccion_modeloGam1 - bikes_test$cnt)^2)
error_modeloGam1
sqrt(error_modeloGam1)
# En este modelo incluyo las varibales cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes_train)
plot(modeloGam2, se = TRUE, col = "blue")
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
error_modeloGam2 <- mean((prediccion_modeloGam2 - bikes_test$cnt)^2)
error_modeloGam2
sqrt(error_modeloGam2)
prediccionTotal <- predict(modeloGam2, bikes)
errorTotal <- mean((prediccionTotal - bikes$cnt)^2)
sqrt(errorTotal)
plot(prediccionTotal, se = TRUE, col = "pink")
plot(bikes$cnt, se = TRUE, col = "red")
plot(bikes$cnt, se = TRUE, col = "red") + geom_line(modeloGam2)
plot(bikes$cnt, se = TRUE, col = "red") + geom_line(aes(x = modeloGam2))
plot(bikes$cnt, se = TRUE, col = "red") + geom_curve(aes(x = modeloGam2))
plot(bikes$cnt, se = TRUE, col = "red") + smooth.spline(x = modeloGam2)
plot(bikes$cnt, se = TRUE, col = "red") + smooth.spline(x = modeloGam2, y = bikes$cnt)
set.seed(123)
bikes <- read.csv("day.csv")
bikes <- select(bikes, -instant)
DOFtemp <- smooth.spline(bikes$temp, bikes$cnt, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$atemp, bikes$cnt, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$hum, bikes$cnt, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$windspeed, bikes$cnt, cv = TRUE) #DOF of windspeed
DOFtemp; DOFatemp; DOFhum; DOFwindspeed
bikes$season <- as.factor(bikes$season)
bikes$mnth <- as.factor(bikes$mntj)
bikes$season <- as.factor(bikes$season)
bikes$mnth <- as.factor(bikes$mnth)
bikes$weekday <- as.factor(bikes$weekday)
bikes$weathersit <- as.factor(bikes$weathersit)
train <- sample(nrow(bikes), 0.7*nrow(bikes))
bikes_train <- bikes[train,] # muestra de entrenamiento
bikes_test <- bikes[-train,] # muestra de test
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes_train)
plot(modeloGam1, se = TRUE, col = "red")
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
error_modeloGam1 <- mean((prediccion_modeloGam1 - bikes_test$cnt)^2)
error_modeloGam1
sqrt(error_modeloGam1)
# En este modelo incluyo las varibales cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes_train)
plot(modeloGam2, se = TRUE, col = "blue")
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
error_modeloGam2 <- mean((prediccion_modeloGam2 - bikes_test$cnt)^2)
error_modeloGam2
sqrt(error_modeloGam2)
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
error_modeloGam1 <- mean((prediccion_modeloGam1 - bikes_test$cnt)^2)
error_modeloGam1
sqrt(error_modeloGam1)
prediccionTotal <- predict(modeloGam2, bikes)
errorTotal <- mean((prediccionTotal - bikes$cnt)^2)
sqrt(errorTotal)
anova(modeloGam1, modeloGam2, test = "F")
DOFtemp <- smooth.spline(bikes$temp, bikes$cnt, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$atemp, bikes$cnt, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$hum, bikes$cnt, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$windspeed, bikes$cnt, cv = TRUE) #DOF of windspeed
DOFtemp; DOFatemp; DOFhum; DOFwindspeed
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(ISLR)
library(boot)
library(splines)
library(ggplot2)
library(gam)
library(skimr)
library(car)
library(corrplot)
set.seed(123)
bikes <- read.csv("day.csv")
skim(bikes)
bikes <- select(bikes, -instant)
corrplot(round(cor(bikes %>% select_at(vars(-dteday))), 1), method = "number", type = "upper",
tl.cex = 0.85, tl.srt = 45)
DOFtemp <- smooth.spline(bikes$temp, bikes$cnt, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$atemp, bikes$cnt, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$hum, bikes$cnt, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$windspeed, bikes$cnt, cv = TRUE) #DOF of windspeed
DOFtemp; DOFatemp; DOFhum; DOFwindspeed
bikes$season <- as.factor(bikes$season)
bikes$mnth <- as.factor(bikes$mnth)
bikes$weekday <- as.factor(bikes$weekday)
bikes$weathersit <- as.factor(bikes$weathersit)
train <- sample(nrow(bikes), 0.7*nrow(bikes))
bikes_train <- bikes[train,] # muestra de entrenamiento
bikes_test <- bikes[-train,] # muestra de test
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes_train)
plot(modeloGam1, se = TRUE, col = "red")
summary(modeloGam1)
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
error_modeloGam1 <- mean((prediccion_modeloGam1 - bikes_test$cnt)^2)
error_modeloGam1
sqrt(error_modeloGam1)
# En este modelo incluyo las variables cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes_train)
plot(modeloGam2, se = TRUE, col = "blue")
summary(modeloGam2)
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
error_modeloGam2 <- mean((prediccion_modeloGam2 - bikes_test$cnt)^2)
error_modeloGam2
sqrt(error_modeloGam2)
prediccionTotal <- predict(modeloGam2, bikes)
errorTotal <- mean((prediccionTotal - bikes$cnt)^2)
sqrt(errorTotal)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(ISLR)
library(boot)
library(splines)
library(ggplot2)
library(gam)
library(skimr)
library(car)
library(corrplot)
set.seed(123)
bikes <- read.csv("day.csv")
bikes <- select(bikes, -instant)
DOFtemp <- smooth.spline(bikes$temp, bikes$cnt, cv = TRUE) #DOF of temp
DOFatemp <- smooth.spline(bikes$atemp, bikes$cnt, cv = TRUE) #DOF of atemp
DOFhum <- smooth.spline(bikes$hum, bikes$cnt, cv = TRUE) #DOF of hum
DOFwindspeed <- smooth.spline(bikes$windspeed, bikes$cnt, cv = TRUE) #DOF of windspeed
DOFtemp; DOFatemp; DOFhum; DOFwindspeed
bikes$season <- as.factor(bikes$season)
bikes$mnth <- as.factor(bikes$mnth)
bikes$weekday <- as.factor(bikes$weekday)
bikes$weathersit <- as.factor(bikes$weathersit)
train <- sample(nrow(bikes), 0.7*nrow(bikes))
bikes_train <- bikes[train,] # muestra de entrenamiento
bikes_test <- bikes[-train,] # muestra de test
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
# En este modelo incluyo únicamente las variables cuantitativas
modeloGam1 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) +
s(temp, df = 9.103704) + s(windspeed, df = 6.007664), data = bikes_train)
plot(modeloGam1, se = TRUE, col = "red")
summary(modeloGam1)
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
error_modeloGam1 <- mean((prediccion_modeloGam1 - bikes_test$cnt)^2)
error_modeloGam1
sqrt(error_modeloGam1)
# En este modelo incluyo las variables cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes_train)
plot(modeloGam2, se = TRUE, col = "blue")
summary(modeloGam2)
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
error_modeloGam2 <- mean((prediccion_modeloGam2 - bikes_test$cnt)^2)
error_modeloGam2
sqrt(error_modeloGam2)
summary(modeloGam1)
prediccion_modeloGam1 <- predict(modeloGam1, bikes_test)
error_modeloGam1 <- mean((prediccion_modeloGam1 - bikes_test$cnt)^2)
error_modeloGam1
sqrt(error_modeloGam1)
# En este modelo incluyo las variables cuantitativas y las categoricas
modeloGam2 <- gam(cnt ~ s(atemp, df = 8.805497) + s(hum, df = 8.805497) + s(temp, df = 9.103704) +
s(windspeed, df = 6.007664) + season + yr + mnth + holiday + weekday +
workingday + weathersit, data = bikes_train)
plot(modeloGam2, se = TRUE, col = "blue")
summary(modeloGam2)
prediccion_modeloGam2 <- predict(modeloGam2, bikes_test)
error_modeloGam2 <- mean((prediccion_modeloGam2 - bikes_test$cnt)^2)
error_modeloGam2
sqrt(error_modeloGam2)
prediccionTotal <- predict(modeloGam2, bikes)
errorTotal <- mean((prediccionTotal - bikes$cnt)^2)
sqrt(errorTotal)
plot(x = range(1,1500), y = sqrt(error_modeloGam2)) + geom_bar()
variables <- c('Modelo Gam 1', 'Modelo Gam 2')
valores <- c(sqrt(error_modeloGam1), sqrt(error_modeloGam2))
df <- data.frame(variables, valores)
ggplot(bikes, aes( x = variables, y = valores)) + geom_point()
variables <- c('Modelo Gam 1', 'Modelo Gam 2')
valores <- c(sqrt(error_modeloGam1), sqrt(error_modeloGam2))
df <- data.frame(variables, valores)
ggplot(bikes_train, aes( x = variables, y = valores)) + geom_point()
variables <- c('Modelo Gam 1', 'Modelo Gam 2')
valores <- c(sqrt(error_modeloGam1), sqrt(error_modeloGam2))
df <- data.frame(variables, valores)
ggplot(df, aes( x = variables, y = valores)) + geom_point()
variables <- c('Modelo Gam 1', 'Modelo Gam 2')
valores <- c(sqrt(error_modeloGam1), sqrt(error_modeloGam2))
df <- data.frame(variables, valores)
ggplot(df, aes( x = variables, y = valores)) + geom_col()
modelos <- c('Modelo Gam 1', 'Modelo Gam 2')
error <- c(sqrt(error_modeloGam1), sqrt(error_modeloGam2))
df <- data.frame(modelos, error)
ggplot(df, aes( x = modelos, y = error)) + geom_col()
modelos <- c('Modelo Gam 1', 'Modelo Gam 2')
error <- c(sqrt(error_modeloGam1), sqrt(error_modeloGam2))
df <- data.frame(modelos, error)
ggplot(df, aes( x = modelos, y = error)) + geom_col( col = "red")
modelos <- c('Modelo Gam 1', 'Modelo Gam 2')
error <- c(sqrt(error_modeloGam1), sqrt(error_modeloGam2))
df <- data.frame(modelos, error)
ggplot(df, aes( x = modelos, y = error)) + geom_col( colour = "red")
modelos <- c('Modelo Gam 1', 'Modelo Gam 2')
error <- c(sqrt(error_modeloGam1), sqrt(error_modeloGam2))
df <- data.frame(modelos, error)
ggplot(df, aes( x = modelos, y = error)) + geom_col()
707.88/1276.559
